<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AI.NeuralNetwork</name>
    </assembly>
    <members>
        <member name="T:AI.NeuralNetwork.ConvolutionNeuralNetwork">
            <summary>
            Description of ConvNN.
            </summary>
        </member>
        <member name="P:AI.NeuralNetwork.ConvolutionNeuralNetwork.LayrsInfo">
            <summary>
            Описание слоев
            </summary>
        </member>
        <member name="P:AI.NeuralNetwork.ConvolutionNeuralNetwork.Loss">
            <summary>
            Ошибка сети
            </summary>
        </member>
        <member name="P:AI.NeuralNetwork.ConvolutionNeuralNetwork.Porog">
            <summary>
            Порог
            </summary>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.#ctor(System.String[])">
            <summary>
            Произвольная сврточная НС
            </summary>
            <param name="layInf">Описание слоев</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.#ctor(System.String)">
            <summary>
            Cверточная НС
            </summary>
            <param name="path">путь до сети</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.OutCNNW(AI.MathMod.Matrix)">
            <summary>
            Выход НС
            </summary>
            <param name="matr">Входная матрица</param>
            <returns>Номер класса(нумерация с 0)</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.OutCNNW(AI.MathMod.Tensor)">
            <summary>
            Выход НС
            </summary>
            <param name="tensor">Входной тензор</param>
            <returns>Номер класса</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.OutCNNW(AI.MathMod.Vector)">
            <summary>
            Выход НС
            </summary>
            <param name="vect">Входной вектор</param>
            <returns>Номер класса(нумерация с 0)</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.OutCNNW2(AI.MathMod.Vector)">
            <summary>
            Выход НС
            </summary>
            <param name="vect">Входной вектор</param>
            <returns>Выходной вектор</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.OutLayer(AI.MathMod.Vector,System.Int32)">
            <summary>
            Выход НС
            </summary>
            <param name="vect">Входной вектор</param>
            <param name="numL">Номер слоя</param>
            <returns>Выходной вектор</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Teach(AI.MathMod.Matrix,System.Int32,System.Int32)">
            <summary>
            Обучение
            </summary>
            <param name="matr">Матрица</param>
            <param name="numClass">Номер класса(c нуля)</param>
            <param name="Epoch">Эпохи обучения</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Teach(AI.MathMod.Vector,System.Int32,System.Int32)">
            <summary>
            Обучение
            </summary>
            <param name="vect">вектор</param>
            <param name="numClass">Номер класса(c нуля)</param>
            <param name="Epoch">Эпохи обучения</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Teach(AI.MathMod.Tensor,System.Int32,System.Int32)">
            <summary>
            Обучение
            </summary>
            <param name="vect">вектор</param>
            <param name="numClass">Номер класса(c нуля)</param>
            <param name="Epoch">Эпохи обучения</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Teach(AI.MathMod.Vector,AI.MathMod.Vector,System.Int32)">
            <summary>
            Обучение
            </summary>
            <param name="vect">вектор</param>
            <param name="numClass">Номер класса(c нуля)</param>
            <param name="Epoch">Эпохи обучения</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Teach(AI.NeuralNetwork.Classes,System.Int32)">
            <summary>
            Обучение нейронной сети
            </summary>
            <param name="classes">Описание классов</param>
            <param name="repeat">Повторы</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.TeachRnd(AI.NeuralNetwork.Classes,System.Int32)">
            <summary>
            Обучение нейронной сети
            </summary>
            <param name="classes">Описание классов</param>
            <param name="repeat">Повторы</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Tensor3ToClass(AI.NeuralNetwork.Tensor3)">
            <summary>
            Выдает номер класса
            </summary>
            <param name="inp">Вход</param>
            <returns>Номер</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Tensor3ToVector(AI.NeuralNetwork.Tensor3)">
            <summary>
            Выдает номер класса
            </summary>
            <param name="inp">Вход</param>
            <returns>Номер</returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.MatrixToTensor3(AI.MathMod.Matrix)">
            <summary>
            Матрица в Tensor3
            </summary>
            <param name="matr"></param>
            <returns></returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.VectorToTensor3(AI.MathMod.Vector)">
            <summary>
            Вектор в Tensor3
            </summary>
            <param name="vect"></param>
            <returns></returns>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Save(System.String)">
            <summary>
            Сохранение нейронной сети
            </summary>
            <param name="path">Путь</param>
        </member>
        <member name="M:AI.NeuralNetwork.ConvolutionNeuralNetwork.Open(System.String)">
            <summary>
            Загрузка 
            </summary>
            <param name="path">Путь</param>
        </member>
        <member name="M:AI.NeuralNetwork.ItemClass.GetRandomVector">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:AI.NeuralNetwork.Convolution.Core.MaxoutLayer">
            <summary>
                x -> max(x)
            </summary>
        </member>
        <member name="T:AI.NeuralNetwork.Convolution.Core.RegressionLayer">
            <summary>
                Реализует функцию потерь регрессии L2, поэтому штрафует 
                \ sum_i (|| x_i - y_i || ^ 2), где x - вход, 
                а y - предоставленный пользователем массив «правильных» значений.
            </summary>
        </member>
        <member name="T:AI.NeuralNetwork.Convolution.Core.ReluLayer">
            <summary>
               Релу активация
                x -> max(0, x)
            </summary>
        </member>
        <member name="T:AI.NeuralNetwork.Convolution.Core.SigmoidLayer">
            <summary>
               Сигмоидальная активационная ф-я
            </summary>
        </member>
        <member name="T:AI.NeuralNetwork.Convolution.Core.SoftmaxLayer">
            <summary>
                This is a classifier, with N discrete classes from 0 to N-1
                it gets a stream of N incoming numbers and computes the softmax
                function (exponentiate and normalize to sum to 1 as probabilities should)
            </summary>
        </member>
        <member name="T:AI.NeuralNetwork.Tensor3">
            <summary>
                Представляет тензор 3-го ранга, как базовый класс нейронной сети
            </summary>
        </member>
        <member name="M:AI.NeuralNetwork.Tensor3.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Заполнение тензора случайными числами
            </summary>
            <param name="width">ширина</param>
            <param name="height">высота</param>
            <param name="depth">глубина</param>
        </member>
        <member name="M:AI.NeuralNetwork.Tensor3.#ctor(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Тензор 3-го ранга
            </summary>
            <param name="width">Ширина</param>
            <param name="height">Высота</param>
            <param name="depth">Глубина</param>
            <param name="c">Величина которой инициализируется тензор</param>
        </member>
        <!-- Проигнорирован некорректный комментарий XML для члена "M:AI.NeuralNetwork.Tensor3.#ctor(System.Collections.Generic.IList{System.Double})" -->
        <member name="M:AI.NeuralNetwork.Core.Tensor3Utilities.Augment(AI.NeuralNetwork.Tensor3,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
               Предназначен для использования с увеличением данных
            </summary>
            <param name="Tensor3">Входной Tensor3</param>
            <param name="crop">Размер выхода</param>
            <param name="dx">Смещение по входу Tensor3, сдвига</param>
            <param name="dy">Смещение по входящему Tensor3, сдвига</param>
            <param name="flipLeftRight">Перевернуть влево / вправо</param>
            <returns></returns>
        </member>
    </members>
</doc>
